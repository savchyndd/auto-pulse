{"version":3,"file":"static/js/556.4b0240cb.chunk.js","mappings":"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","sources":["component/kit/FromToField/FromToField.jsx","images/icons/ChevronDownIcon.jsx","component/kit/SelectField/SelectField.jsx","component/Filter/Filter.jsx","pages/Catalog/Catalog.jsx","redux/filters/filtersSelectors.js","utils/createArrayWithStep.js","utils/getFilteredAdverts.js"],"sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { toast } from \"react-toastify\";\n\nimport { formatingCommasToNumber } from \"utils/formatingCommasToNumber\";\n\nimport \"./FromToField.scss\";\n\nconst FromToField = (props) => {\n  const {\n    id = \"text-input\",\n    label = \"label\",\n    value = { from: \"\", to: \"\" },\n  } = props;\n\n  const [fieldValue, setFieldValue] = useState(value);\n\n  const onChange = (e) => {\n    if (!/^[0-9,]+$/.test(e.target.value) && e.target.value.trim()) {\n      toast.warn(\"Please write only numbers\");\n      return;\n    }\n\n    setFieldValue((prev) => ({\n      ...prev,\n      [e.target.name]: formatingCommasToNumber(e.target.value),\n    }));\n  };\n\n  return (\n    <div className=\"input-fromto-field__group\">\n      <p>{label}</p>\n      <div className=\"input-fromto__container\">\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_from`}>From</label>\n          <input\n            name={\"from\"}\n            value={fieldValue.from}\n            className=\"input__from\"\n            id={`${id}_from`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"input-fromto__wrapper\">\n          <label htmlFor={`${id}_to`}>To</label>\n          <input\n            name={\"to\"}\n            value={fieldValue.to}\n            className=\"input__to\"\n            id={`${id}_to`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromToField;\n\nFromToField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.shape({ from: PropTypes.string, to: PropTypes.string }),\n};\n","import * as React from \"react\";\nconst ChevronDownIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"m5 7.5 5 5 5-5\"\n    />\n  </svg>\n);\nexport default ChevronDownIcon;\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ChevronDownIcon from \"images/icons/ChevronDownIcon\";\n\nimport \"./SelectField.scss\";\n\nconst SelectField = (props) => {\n  const { name, id, label, placeholder = \"Enter the text\", optionList } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = (value) => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleKeydown = (e) => {\n      if (e.code === \"Escape\") {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeydown);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className=\"dropdown__cotainer\">\n      <p className=\"dropdown__label\">{label}</p>\n      <div className=\"dropdown__select\">\n        <div\n          className={`dropdown__header ${isOpen ? \"dropdown__open\" : \"\"}`}\n          onClick={toggling}\n        >\n          <input\n            type=\"text\"\n            id={id}\n            name={name}\n            value={selectedOption || placeholder}\n            readOnly={true}\n            className=\"dropdown__select--input\"\n          />\n          <ChevronDownIcon />\n        </div>\n        {isOpen && (\n          <div className=\"dropdown__list-container\">\n            <ul className=\"dropdown__list\">\n              {optionList.map((option) => (\n                <li\n                  name={name}\n                  onClick={onOptionClicked(option)}\n                  key={Math.random()}\n                  className=\"dropdown__item\"\n                >\n                  {option}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectField;\n\nSelectField.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  optionList: PropTypes.array,\n  value: PropTypes.string,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { selectAdvertsFilter } from \"redux/filters/filtersSelectors\";\nimport { setAdvertsFilter } from \"redux/filters/filtersSlice\";\n\nimport { removeCommasFromString } from \"utils/formatingCommasToNumber\";\n\nimport FromToField from \"component/kit/FromToField/FromToField\";\nimport SelectField from \"component/kit/SelectField/SelectField\";\nimport Button from \"component/kit/Button/Button\";\n\nimport \"./Filter.scss\";\nimport { toast } from \"react-toastify\";\n\nconst Filter = ({ filtersList }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectAdvertsFilter);\n\n  const handleChangeFilter = (e) => {\n    e.preventDefault();\n\n    const { brand, price, from, to } = e.target.elements;\n\n    if (\n      (!brand.value || brand.value === \"Enter the text\") &&\n      (!price.value || price.value === \"To $\") &&\n      !from.value &&\n      !to.value\n    ) {\n      toast.info(\"Please chose one of filters\");\n      return;\n    }\n\n    const newfilters = {\n      [brand.name]: brand.value !== \"Enter the text\" ? brand.value : \"\",\n      [price.name]: price.value !== \"To $\" ? price.value : \"\",\n      mileage: {\n        from: removeCommasFromString(from.value),\n        to: removeCommasFromString(to.value),\n      },\n      prices: [],\n    };\n\n    dispatch(setAdvertsFilter(newfilters));\n  };\n\n  return (\n    <form className=\"filter\" onSubmit={handleChangeFilter}>\n      <SelectField\n        name=\"brand\"\n        label=\"Car brand\"\n        value={filter.brand}\n        optionList={filtersList.brands}\n      />\n      <SelectField\n        name=\"price\"\n        label=\"Price/ 1 hour\"\n        placeholder=\"To $\"\n        value={filter.price}\n        optionList={filtersList.prices}\n      />\n      <FromToField\n        name=\"mileage\"\n        label=\"Сar mileage / km\"\n        value={filter.mileage}\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = PropTypes.shape({\n  brands: PropTypes.arrayOf(PropTypes.string).isRequired,\n  prices: PropTypes.arrayOf(PropTypes.number).isRequired,\n}).isRequired;\n","import { useMemo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useGetAdvertsQuery } from \"redux/adverts/advertsSlice\";\nimport { selectAdvertsFilter } from \"redux/filters/filtersSelectors\";\n\nimport { getFilteredAdverts } from \"utils/getFilteredAdverts\";\nimport { createArrayWithStep } from \"utils/createArrayWithStep\";\n\nimport AdvertsList from \"component/AdvertsList/AdvertsList\";\nimport Filter from \"component/Filter/Filter\";\nimport Section from \"component/kit/Section/Section\";\nimport Button from \"component/kit/Button/Button\";\nimport Loader from \"component/kit/Loader/Loader\";\n\nimport \"./Catalog.scss\";\n\nconst Catalog = () => {\n  const filter = useSelector(selectAdvertsFilter);\n  const { data: adverts, isLoading } = useGetAdvertsQuery();\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let dataFilters = {\n    brands: [],\n    prices: [],\n  };\n  let visibleAdverts = useMemo(() => {}, []);\n\n  const limitAdverts = 8;\n  let totalAdverts = 0;\n  let totalPages = 0;\n\n  if (!isLoading) {\n    visibleAdverts = getFilteredAdverts(adverts, filter);\n    dataFilters = {\n      brands: [\"All\", ...new Set(adverts.map(({ make }) => make))],\n      prices: createArrayWithStep(\n        0,\n        Math.max(\n          ...new Set(\n            adverts.map(({ rentalPrice }) => rentalPrice.replace(/(\\$)/, \"\"))\n          )\n        ),\n        10\n      ),\n    };\n\n    totalAdverts = visibleAdverts.length;\n    totalPages = !totalAdverts ? 1 : Math.ceil(totalAdverts / limitAdverts);\n  }\n\n  const currentAdvertsData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * limitAdverts;\n    const lastPageIndex = firstPageIndex + limitAdverts;\n\n    return visibleAdverts?.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, visibleAdverts]);\n\n  const hundleClickLoadMore = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage((prev) => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const hundleClickRetuntToStart = () => {\n    setCurrentPage(1);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <>\n          <Filter filtersList={dataFilters} />\n          <AdvertsList list={currentAdvertsData} />\n          <div className=\"buttons__wrapper\">\n            {totalPages > currentPage && (\n              <Button\n                variant=\"text\"\n                className=\"load-more__btn\"\n                onClick={hundleClickLoadMore}\n              >\n                Load more\n              </Button>\n            )}\n            {currentPage !== 1 && (\n              <Button\n                variant=\"text\"\n                className=\"load-more__btn\"\n                onClick={hundleClickRetuntToStart}\n              >\n                Return to 1 page\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default Catalog;\n","export const selectAdvertsFilter = (state) => state.filters;\n","export const createArrayWithStep = (start, end, step) => {\n  return Array.from(\n    { length: Math.floor((end - start) / step) + 1 },\n    (_, index) => start + index * step\n  );\n};\n","export const getFilteredAdverts = (adverts, filters) => {\n  return adverts.filter((car) => {\n    if (\n      filters.brand &&\n      car.make !== filters.brand &&\n      filters.brand !== \"All\"\n    ) {\n      return false;\n    }\n\n    if (\n      filters.price &&\n      Number(car.rentalPrice.replace(/(\\$)/, \"\")) > Number(filters.price)\n    ) {\n      return false;\n    }\n\n    if (filters.mileage.from.trim() || filters.mileage.to.trim()) {\n      const { from, to } = filters.mileage;\n      const carMileage = Number(car.mileage);\n\n      if (\n        (from !== undefined && carMileage < Number(from)) ||\n        (to !== undefined && carMileage > Number(to))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n"],"names":["props","_props$id","id","_props$label","label","_props$value","value","from","to","_useState","useState","_useState2","_slicedToArray","fieldValue","setFieldValue","onChange","e","test","target","trim","prev","_objectSpread","_defineProperty","name","formatingCommasToNumber","toast","warn","_jsxs","className","children","_jsx","htmlFor","concat","type","autoComplete","xmlns","width","height","fill","strokeLinecap","strokeLinejoin","strokeWidth","d","_props$placeholder","placeholder","optionList","isOpen","setIsOpen","_useState3","_useState4","selectedOption","setSelectedOption","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","onClick","readOnly","ChevronDownIcon","map","option","Math","random","_ref","filtersList","dispatch","useDispatch","filter","useSelector","selectAdvertsFilter","onSubmit","_newfilters","preventDefault","_e$target$elements","elements","brand","price","newfilters","removeCommasFromString","setAdvertsFilter","info","SelectField","brands","prices","FromToField","mileage","Button","_useGetAdvertsQuery","useGetAdvertsQuery","adverts","data","isLoading","currentPage","setCurrentPage","dataFilters","visibleAdverts","useMemo","totalAdverts","totalPages","getFilteredAdverts","_toConsumableArray","Set","make","createArrayWithStep","max","apply","_ref2","rentalPrice","replace","length","ceil","currentAdvertsData","_visibleAdverts","firstPageIndex","lastPageIndex","slice","Section","Loader","_Fragment","Filter","AdvertsList","list","variant","scrollTo","state","filters","start","end","step","Array","floor","_","index","car","Number","_filters$mileage","carMileage","undefined"],"sourceRoot":""}